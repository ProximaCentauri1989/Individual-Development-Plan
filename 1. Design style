1. Имеется следующая функция:

int PasswordCount(int a, int n, int m, std::vector<int>& result)
{
    int sum;
    for (int i = n; i <= m; i++)
    {
        sum = 0;
        for (int j = n; j <= i; j++)
        {
            sum += static_cast<int>(std::pow(a, j));
        }
        result.push_back(sum);
    }
    return sum;
}
Ответьте на вопросы:

1. Выполняет ли эта функция одну или несколько задач? (обратите внимание на возвращаемые значения) Если несколько — как ее изменить, чтобы она решала только одну задачу?

2. Отражает ли название функции то что она выполняет? Предложите вариант лучше — опишите в названии что вычисляет функция с точки зрения математики.

3. Какова сложность примененного алгоритма (линейная, логарифмическая, квадратичная, иная)? Можно ли ее уменьшить, если да — то как?

4. Присутствует ли в реализации преждевременная оптимизация? Нужна ли она (с учетом п. 3)?

5. Присутствует ли в реализации преждевременная пессимизация?

Предоставьте свой вариант реализации функции, с учетом приведенных вопросов.
